# Generated by Django 5.2.6 on 2025-09-30 21:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('department', '0001_initial'),
        ('qa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='users/')),
                ('type', models.CharField(max_length=50, null=True)),
                ('password', models.CharField(max_length=255)),
                ('full_name', models.CharField(db_index=True, max_length=255, null=True)),
                ('email_address', models.CharField(db_index=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'admin',
                'verbose_name_plural': 'admins',
                'db_table': 'admin',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to='users/')),
                ('password', models.CharField(max_length=255)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('email_address', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('type', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'user',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.UUIDField()),
                ('collection_id', models.UUIDField()),
                ('hemis_id', models.CharField(max_length=64)),
                ('compyuter_name', models.CharField(max_length=255)),
                ('collection_name', models.CharField(blank=True, max_length=255, null=True)),
                ('grade', models.IntegerField()),
                ('user_fullname', models.CharField(max_length=255, null=True)),
                ('group_name', models.CharField(max_length=255, null=True)),
                ('faculty_name', models.CharField(max_length=255)),
                ('course', models.SmallIntegerField()),
                ('all_question_count', models.SmallIntegerField()),
                ('find_question_count', models.SmallIntegerField()),
                ('has_finished', models.BooleanField()),
                ('is_pending', models.BooleanField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('until_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_result',
            },
        ),
        migrations.CreateModel(
            name='UserCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('have_attempt', models.IntegerField()),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_collection', to='qa.collection')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collection_user', to='users.user')),
            ],
            options={
                'db_table': 'user_collection',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('hemis_id', models.CharField(max_length=255)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_user_info', to='department.group')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_info', to='users.user')),
            ],
            options={
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('hemis_id', models.CharField(max_length=128)),
                ('fullname', models.CharField(max_length=64)),
                ('course', models.SmallIntegerField()),
                ('group_name', models.CharField(max_length=128)),
                ('faculty', models.CharField(max_length=255)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_user_log', to='department.group')),
            ],
            options={
                'db_table': 'user_log',
            },
        ),
        migrations.CreateModel(
            name='UserResultAnswerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('question_name', models.CharField(blank=True, max_length=255, null=True)),
                ('question_image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer_count', models.IntegerField()),
                ('find_answer_count', models.IntegerField()),
                ('question_number', models.IntegerField()),
                ('get_time', models.CharField(max_length=10)),
                ('user_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_result_answer_data', to='users.userresult')),
            ],
            options={
                'db_table': 'user_result_answer_data',
            },
        ),
    ]
